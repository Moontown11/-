package bj1339_단어수학;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.Collections;

import java.util.Scanner;

public class Main {
//	public static void main(String args[]) throws IOException{
//		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//		int N = Integer.parseInt(br.readLine());
//		String[] arr = new String[N];
//		Integer[] alphabet = new Integer[26];
//		boolean[] number = new boolean[9];
//		Arrays.fill(number, false);
//		Arrays.fill(alphabet, 0); // alphabet 배열 0으로 초기화
//		Character temp;
//		
//		//알파벳 문자열 받아서 큰 자리 순서대로 알파벳 판단
//		for(int i = 0;i<N; i++) {
//			arr[i] = br.readLine();
//			for(int j = 0; j<arr[i].length(); j++) {
//				temp = arr[i].charAt(j);
//				int idx = temp - 65;
//				if(alphabet[idx] < arr[i].length()-j)
//					alphabet[idx] = arr[i].length()-j;
//			}
//		}
//		//알파벳의 숫자 정함
//		//우선 temparr에 arr를 복사해서 sort후 0에 참조해서 가장 큰 숫자 찾기
//		
//
//		Integer[] temparr = alphabet.clone();
//		Arrays.sort(temparr,Collections.reverseOrder());
//		int max = temparr[0];
//		int start = 9;
//		
//		//9 - (max-arr[idx])로 alphabet에 값 넣기
//		for(int i = 0; i<26; i++) {
//			while(number[start])
//				start--;
//			
//			if(alphabet[i] != 0)
//				alphabet[i] = 9 - (max-alphabet[i]);
//		}
//		//합 구하기
//		int sum = 0;
//		//alphabet[idx] * 10^(length - j)로 sum에 더하기 
//		for(int i = 0;i<N; i++) {
//			for(int j = 0; j< arr[i].length(); j++) {
//				temp = arr[i].charAt(j);
//				int idx = temp - 65;
//				sum += alphabet[idx] * Math.pow(10,(arr[i].length()-j-1));
//			}
//		}
//		
//		
//		System.out.println(sum);
//	}
	
	 public static void main(String[] args) {
	        //testcase 및 문자열 입력
	        Scanner sc = new Scanner(System.in);
	        int n = sc.nextInt();
	        String [] arr = new String[n];
	        int [] alpha = new int[26];
	        
	        for(int i=0; i<n; i++){
	            arr[i] = sc.next();
	        }

	        for(int i=0; i<n; i++){
	            int temp = (int)Math.pow(10,arr[i].length()-1);
	            for(int j=0; j<arr[i].length(); j++){
	                alpha[(int)arr[i].charAt(j)-65]+=temp;
	                temp /=10;
	            }
	        }

	        Arrays.sort(alpha);
	        int index = 9;
	        int sum =0;
	        for(int i=alpha.length-1; i>=0; i--){
	            if(alpha[i] == 0){
	                break;
	            }
	            sum+= alpha[i]*index;
	            index--;
	        }
	        System.out.println(sum);
	 }
	 
	 /* 풀어보다 결국 포기했다  ㅅㅂ 난 역시 개빡대가리인가보다..
	  * 거의 근접했는데 내건 덕지덕지 난잡하다
    * 내 생각에 풀이방식을 확실히 정하지 않고 덤벼들어서 그런거같다
    * 다음 부터는 풀이 방법을 어느정도 잡고 작성해야겠다.
	  */

}
