package bj1744_수묶기;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.Stack;
import java.util.Collections;

public class Main {
	public static void main(String args[]) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int n = Integer.parseInt(br.readLine());
		
		Stack<Integer> stack = new Stack<Integer>();
		Integer arr[] = new Integer[n];
		for(int i = 0; i<n; i++)
			arr[i] = Integer.parseInt(br.readLine());
		
		Arrays.sort(arr, Collections.reverseOrder());
		
		int num, sum=0;
		
		for(int i = 0; i<n; i++) {
			num = arr[i];
			
			if(stack.isEmpty() && num > 1)
				stack.push(num);
			else if(!stack.isEmpty() && num > 1)
				sum += (stack.pop() * num);
			else if(num == 1)
				{
				if(!stack.isEmpty())
					sum+=stack.pop();
				sum += 1;
				}
			else if(num <= 0) {
				if(!stack.isEmpty() && stack.peek() > 0)
					sum += stack.pop();
				stack.push(num);
			}
		}
		
		int minus = 0;
		while(!stack.isEmpty())
		{
			if(minus == 0)
				minus = stack.pop();
			else if(minus != 0) {
				sum += minus * stack.pop();
				minus = 0;
				
			}
		}
		
		if (minus != 0)
			sum += minus;
		
		System.out.println(sum);
		
	}
}

//뭔가 내건 너무 복잡하다 굳이 스택 안쓰고 그냥 음수 양수 구분해서 하는게 더 

//import java.io.*;
//import java.util.Arrays;
//
///**
// *  No.1744: 수 묶기
// *  Hint: Greedy + sort
// */
//
//public class BOJ1744 {
//    public static void main(String[] args) throws IOException {
//        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
//        int n = Integer.parseInt(br.readLine());
//        int[] arr = new int[n];
//
//        int minusCount = 0;
//        for (int i = 0; i < n; i++) {
//            arr[i] = Integer.parseInt(br.readLine());
//            if (arr[i] <= 0) {
//                minusCount++;
//            }
//        }
//        Arrays.sort(arr);
//
//        int ans = 0;
//        // 음수 부분(0포함) - 두 개씩 묶어서 더하기
//        for (int i = 1; i < minusCount; i += 2) {
//            ans += (arr[i - 1] * arr[i]);
//        }
//
//        // 음수(0포함)가 홀수 개일 경우 그냥 더하기
//        if (minusCount % 2 == 1) {
//            ans += arr[minusCount - 1];
//        }
//
//        // 양수가 홀수 개일 경우 그냥 더하기
//        if ((n - minusCount) % 2 == 1) {
//            ans += arr[minusCount];
//        }
//
//        // 양수 부분 - 두 개씩 묶어서 더하기
//        for (int i = n - 1; i > minusCount ; i -= 2) {
//            int mul = arr[i] * arr[i - 1];
//            int sum = arr[i] + arr[i - 1];
//            if (mul > sum) {
//                ans += mul;
//            } else {
//                ans += sum;
//            }
//        }
//
//        bw.write(String.valueOf(ans));
//        bw.close();
//        br.close();
//    }
//}
